//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Infostructure.SimpleList.DataAccess
{
    public partial class SimpleListItem
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int SimpleListID
        {
            get { return _simpleListID; }
            set
            {
                if (_simpleListID != value)
                {
                    if (SimpleList != null && SimpleList.ID != value)
                    {
                        SimpleList = null;
                    }
                    _simpleListID = value;
                }
            }
        }
        private int _simpleListID;
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual bool Done
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual SimpleList SimpleList
        {
            get { return _simpleList; }
            set
            {
                if (!ReferenceEquals(_simpleList, value))
                {
                    var previousValue = _simpleList;
                    _simpleList = value;
                    FixupSimpleList(previousValue);
                }
            }
        }
        private SimpleList _simpleList;

        #endregion
        #region Association Fixup
    
        private void FixupSimpleList(SimpleList previousValue)
        {
            if (previousValue != null && previousValue.SimpleListItems.Contains(this))
            {
                previousValue.SimpleListItems.Remove(this);
            }
    
            if (SimpleList != null)
            {
                if (!SimpleList.SimpleListItems.Contains(this))
                {
                    SimpleList.SimpleListItems.Add(this);
                }
                if (SimpleListID != SimpleList.ID)
                {
                    SimpleListID = SimpleList.ID;
                }
            }
        }

        #endregion
    }
}
